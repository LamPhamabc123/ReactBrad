{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactinfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","deleteContact","newContacts","Fragment","contacts_Contact","deleteClickHandler","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","basename","process","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f067f04.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          contact => contact.id !== action.payload\r\n        )\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n      case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact => \r\n          contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state =>\r\n      reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    \r\n    this.setState({contacts: res.data});\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n\r\n  state = {\r\n    showContactinfo: false\r\n  };\r\n  onShowClick = () => {\r\n    this.setState({\r\n      showContactinfo: !this.state.showContactinfo\r\n    });\r\n  };\r\n\r\n  onDeleteClick = async (id, dispatch) => {\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    } catch (e) {\r\n      dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n    }\r\n   \r\n  }\r\n\r\n  // static propTypes = {\r\n  //   name: PropTypes.string.isRequired,\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n  // };\r\n  static propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    // const { contact } = this.props;\r\n    const { showContactinfo } = this.state;\r\n    return (\r\n\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>{name} {' '}<i\r\n                onClick={this.onShowClick}\r\n                className=\"fas fa-sort-down\"\r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i \r\n                    className=\"fas fa-pencil-alt\" \r\n                    style={{\r\n                      cursor: 'pointer', \r\n                      float: 'right',\r\n                      // color: 'black',\r\n                      marginRight: '1rem'\r\n                      }}>\r\n                  </i>\r\n                </Link>\r\n              </h4>\r\n              {showContactinfo ? (<ul className=\"list-group\">\r\n                <li className=\"list-group-item\">{email}</li>\r\n                <li className=\"list-group-item\">{phone}</li>\r\n              </ul>) : null}\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\n// Contact.propTypes = {\r\n//   name: PropTypes.string.isRequired,\r\n//   email: PropTypes.string.isRequired,\r\n//   phone: PropTypes.string.isRequired,\r\n// }\r\nexport default Contact;\r\n","import React, { Component } from 'react'\r\nimport Contact from './Contact';\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n\r\n  deleteContact = (id) => {\r\n    const { contacts } = this.state;\r\n\r\n    const newContacts = contacts.filter(contact => contact.id !== id);\r\n\r\n    this.setState({\r\n      contacts: newContacts\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <React.Fragment>\r\n              <h1 className=\"display-4 mb-2\"><span className=\"text-danger\">\r\n              Contact List</span> </h1>\r\n              {contacts.map(contact => (\r\n                <Contact\r\n                  key={contact.id}\r\n                  contact={contact}\r\n                  deleteClickHandler={this.deleteContact.bind(this, contact.id)} />\r\n              ))}\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  placeholder,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-sm',\r\n        {\r\n          'is-invalid':error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if(name === ''){\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    }\r\n\r\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n    dispatch({type: 'ADD_CONTACT', payload: res.data});\r\n    \r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = (e) => this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-sm btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n        name: contact.name,\r\n        email: contact.email,\r\n        phone: contact.phone\r\n    });\r\n  }\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, phone } = this.state;\r\n\r\n    // Check For Errors\r\n    if(name === ''){\r\n      this.setState({errors: {name: 'Name is required'}});\r\n      return;\r\n    }\r\n    if(email === ''){\r\n      this.setState({errors: {email: 'Email is required'}});\r\n      return;\r\n    }\r\n    if(phone === ''){\r\n      this.setState({errors: {phone: 'Phone is required'}});\r\n      return;\r\n    }\r\n\r\n      const updateContact = {\r\n        name,\r\n        email,\r\n        phone\r\n      }\r\n\r\n      const { id } = this.props.match.params;\r\n\r\n      const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n\r\n      dispatch({type: 'UPDATE_CONTACT', payload: res.data});\r\n\r\n    // Clear State\r\n    this.setState({\r\n      name: '',\r\n      email: '',\r\n      phone: '',\r\n      errors: {}\r\n    });\r\n\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  onChange = (e) => this.setState({\r\n    [e.target.name]: e.target.value\r\n  });\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup \r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup \r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-sm btn-light btn-block\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Consumer>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EditContact;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    // <div>\r\n    //   <h1>{branding}</h1>\r\n    // </div>\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n      <a href=\"/\" className=\"navbar-brand\">\r\n        {branding}\r\n      </a>\r\n      <div>\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home\">Home</i> \r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n            <i className=\"fas fa-plus\">Add</i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n            <i className=\"fas fa-question\">About</i> \r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p>Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Verson 1.0.0</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About;\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\"><span className=\"text-danger\">404 </span>Page Not Found!</h1>\r\n      <p className=\"lead\">Sorry, that page does not exist</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\nstate ={\r\n  title: '',\r\n  body: ''\r\n}\r\n\r\ncomponentDidMount() {\r\n  fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n  .then(response => response.json())\r\n  .then(data => this.setState({\r\n    title: data.title,\r\n    body: data.body\r\n  }))\r\n}\r\n\r\n// componentWillMount() {\r\n//   console.log('componentWillMount...');\r\n// }\r\n\r\n// componentDidUpdate() {\r\n//   console.log('componentDidUpdate...');\r\n// }\r\n\r\n// componentWillUpdate() {\r\n//   console.log('componentWillUpdate...');\r\n// }\r\n\r\n// componentWillReceiveProps(nextProps, nextState) {\r\n//   console.log('componentWillReceiveProps...');\r\n// }\r\n// static getDerivedStateFromProps(nextProps, prevState) {\r\n//   return {\r\n//     test:'Something'\r\n//   };\r\n// }\r\n\r\n// getSnapshotBeforeUpdate(prevProps, prevState) {\r\n//   console.log('getSnapshotBeforeUpdate...');\r\n// }\r\n\r\n\r\n  render() {\r\n    const { title, body } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Test Component</h1>\r\n        <h3>{title}</h3>\r\n        <p>{body}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Test;","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Contacts from \"./components/contacts/Contacts\";\r\nimport AddContact from \"./components/contacts/AddContact\";\r\nimport EditContact from \"./components/contacts/EditContact\";\r\n\r\nimport Header from \"./components/layout/Header\";\r\nimport About from \"./components/pages/About\";\r\nimport NotFound from \"./components/pages/NotFound\";\r\nimport Test from \"./components/test/Test\";\r\n\r\nimport { Provider } from \"./context\";\r\n\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider>\r\n        \r\n        <Router basename={process.env.PUBLIC_URL}> \r\n          <div className=\"App\">\r\n            <Header branding=\"Contact manager\" />\r\n            <div className=\"container\">\r\n              <Switch>\r\n                <Route  exact path=\"/\" component={Contacts} />\r\n                <Route  exact path=\"/contact/add\" component={AddContact} />\r\n                <Route  exact path=\"/contact/edit/:id\" component={EditContact} />\r\n                <Route  exact path=\"/about\" component={About} />\r\n                <Route  exact path=\"/test\" component={Test} />\r\n                <Route  component={NotFound} />\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}